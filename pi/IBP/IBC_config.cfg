
# Specify properties of you message in this pattern :
# You can also instead of a size, add the number 255 to specify that the request (or answer respectively) will have a dynamic size
#		however you should not screw up in providing this size in the second bit of the message on the arduino side (pi will have shiny api for that)
# the c++ regex which will be used is : "[[:space:]]*[[:digit:]]+[[:space:]]+[[:digit:]]+[[:space:]]+[[:digit:]]+[[:space:]]*"
# which roughly translates to this
# [ID] [requestpayloadsize] [answerpayloadsize]

# examples below

# emergency stop signal with id 0 request size 0 and answersize 0 will cause one byte, the id , to be sent , no answer will be given
0 0 0

#general purpose message transmission clearance (pi allows arduino to send a dynamic sized amount of data). The command is issued with lowest priority
255 0 255

